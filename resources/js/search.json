[[{"l":"Приветствую вас на моем сайте","p":["На этом сайте я собрал гайды по настройке разных служб для разных операционных систем"]},{"l":"Кратко о сайте"}],[{"l":"Bash ssh VDS","p":["Небольшой гайд для подключения к вашему серверу через ssh по команде:","Нам надо зайти в файлик /etc/bashrc и в конце файла дописать небольшую функцию","После этого нам надо перезайти в терминал или перезайти под пользователем"]}],[{"l":"Joomla","p":["user@alt who am i"]}],[{"l":"Joomla (mysql)","p":["Этот конфиг если не получится сделать по параметрам!!!"]}],[{"l":"Joomla (pgadmin)"}],[{"l":"Minecraft Server","p":["Для того чтобы поднять майнкрафт сервер с помощью докера нам надо:","Скачать docker через пакетный менеджер apt","Через пакетный менеджер dnf","Запускаем контейнер с образом из интернета и указываем для него параметры","-d - отвечает за запуск в фоне-p - указываем порт для нашего сервера--volume - указываем где будут храниться данные сервера--restart указываем что контейнер будет сам подниматься после перезагрузки-e отвечает за правила (возможно)--name - указываем имя нашему контейнеру 3. После запуска нам надо настроить параметры для нашего сервера, заходим в файл и меняем нужные нам параметры","В конце перезагружаем контейнер чтобы применились наши настройки","Вот и все, теперь заходим в майнкрафт и указываем айпи сервера и порт для подключения к серверу"]}],[{"l":"Nextcloud","p":["Скачиваем докер и докер компоуз","Настраиваем директории для хранения файлов:","Создаём .env файл:","Создаём docker-compose:","Запускаем докер"]}],[{"l":"OSPF on alt (поверх vrrp)"}],[{"l":"Vlans on opnsense","p":["Assign Interface","Do you want to configure Vlans now? yes","Дальше надо выбрать интерфейс который смотрит в сторону клиентов у меня vtnet1","Дальше надо добавить тег, смотрим в топологию и вводим 2000","опять выбираем vtnet1 и вводим уже следующий тег 2010","по той же схеме делаем и последний интерфейс","тыкаем enter","дальше мы должны выбрать интерфейс в сторону интернета wan","дальше указываем lan интерфейс у меня это vtnet1_vlan2010","по такому же принципу вводим остальные интерфейсы","когда все сделали нажимаем enter и y"]}],[{"l":"VRRP (alt linux)","p":["Это мы делаем на R2-KLG тоесть главный","Это делаем на R3-KLG тоесть не главный Обязательно указываем приоритет 99, и в state BACKUP"]}],[{"l":"Zabbix через докер","p":["Скачиваем докер и докер компоуз","Настраиваем директории для хранения файлов:","Создаём .env файл:","Создаём docker-compose:","Создаём конфигурационный файл nginx","Запускаем докер"]}],[{"l":"Шпора Raid","p":["Скачиваем пакет mdadm#смотреть сайт https://www.dmosk.ru/miniinstruktions.php?mini=mdadm","Создаём raid","Сохраняем его блт!!!","Записываем его в fstab","Чтобы посмотреть статусы используем эту команду"]}],[{"l":"Bind на opnsense","p":["Сначала качаем его это итак понятно","ОТКЛЮЧАЕМ UNBOUND DNS, он занимает порт и мешает нам","Заходим в bind указываем в Listen IPs","В Listen Port указываем 53","В DNS Forwarders указываем","На первой странице пока что ничего не трогаем","Идем в ACLs и создаем так acl так ее и называем и в networks указываем","Возвращаемся на первую страницу и там везде проставляем нашу acl","Идем в prinary zone и создаем там зону с такими параметрами","Спускаемся в низ и создаем Records записи как по примеру, ПЕРВАЯ САМАЯ ВАЖНАЯ"]}],[{"l":"Captive portal","p":["Заходим в captive portal Administration и создаем там zone","Заходим в Firewall > Rules > GUEST_KLG","Создаем правило для доступа к локальным сетям, в нем указываем","Заходим в консоль и пишем команду","Ip который мы получили вставляем в Destination в новом правиле","Создаем юзера в System > Access > Users"]}],[{"l":"DNS между филиалами","p":["DNS между филиалами В freeipa заходим на SRV-KLG(Сетевые службы->DNS->зоны перенаправления){Создаём зону rzn.jun.profi Перенаправители зон: 192.168.20.1; 10.0.0.1} Идём в зоны DNS; Добавляем ip-сеть обратной зоны всей сети rzn Потом nano /etc/named.conf Ищем путь /etc/bind/ipa-options-ext.conf И пишем Dnssec-validation no; Allow-query { any; }; Allow-recursion { any; }; Allow-transfer { any; }; На opnsense В srvices-> bind -> Configuration DNS forwarders 192.168.11.100 100.100.100.100"]}],[{"l":"Openssl","p":["Сайт откуда инфа: https://sysadminium.ru/create-own-certificate-authority-on-linux/ apt-get install openssl mkdir /opt/ssl cd /opt/ssl$ openssl genpkey -algorithm RSA -out rootCA.key -aes-128-cbc (#указываем пароль обязательно)$ openssl req -x509 -new -key rootCA.key -sha256 -days 3650 -out rootCA.crt","$ echo \"00\" > rootCA.srl$ nano klg.cnf","$openssl genpkey -algorithm RSA -out site.key$ openssl req -new -key site.key -config klg.cnf -reqexts req_ext -out site.csr$ openssl x509 -req -days 365 -CA rootCA.crt -CAkey rootCA.key -extfile klg.cnf -extensions req_ext -in site.csr -out site.crt$cp site.crt /etc/nginx/$cp site.key /etc/nginx/$cd /etc/nginx инфу по nginx и ssl можно найти на сайте dmosk$nano /etc/nginx/nginx.conf","$systemctl restart nginx На клиенте заходим в терминал:$scp root@192.168.10.101:/opt/ssl/rootCA.crt /etc/pki/ca-trust/source/anchors/$update-ca-turst$cp /etc/pki/ca-trust/source/anchors/rootCA.crt /home/student$chown student:student /home/student/rootCA.crt В настройках браузера firefox заходим в сертификацию и там добавляем сертификат который мы скопировалии"]}],[{"l":"Wg + ospf на opnsense","p":["делаем instance сначало по дефолту, смотрим на то что там надо писать","в Peers делай так же все по обычному, но в Allowed iPs указываем","Далее Заходим в Wireguard(Group) правила nat и там разрешаем все","Ассегнируем интерфейс WG, включаем его","Заходим в правила этого интерфейса и создаем одно разрешающее","Второе правило мы создаем и указываем в source и destination","Заходим в привила nat для wan порта и пробуем указать там разрещающее все для другой fw, если не получиться делаем полностью разрешающее правило","Дальше идем в routing general и там включаем его","Переходим в ospf и там тоже включаем его и указываем в passive interface локальные сети","Идем в ospf networks и указываем там 10.0.0.0/30 и 192.168.0.0/16"]}],[{"l":"ZFS","p":["Скачиваем все обновления и обновляем репозитории","Скачиваем саму zfs","Перезагружаем сервер","Пишем modprobe zfs для запуска zfs и заходим в файлик и раскоменчиваем строчку для запуска zfs при загрузке сервера","Создаём пул дисков","Смотрим статус","Создаём zfs файловую систему на пуле с именем data","Монтируем sudo"]}],[{"l":"Nginx","p":["(порт, стираем все до run, указываем /opt/data) порт 81","}","Cd /opt/data","Chmod -R 0755 /opt/data","Chown -R lighttpd:lighttpd /opt/data","Dnf install lighttpd","Dnf install nginx","listen 80;","Location / {","Nano /etc/ligghtpd/lighttpd.conf","Nano /etc/nginx/nginx.conf","Nano /etc/selinux","Nano index.html","Proxy_pass http://127.0.0.1:81","Proxy_set_header Host $host;","Proxy_set_header X-Forwarded-For $reemote_addr;","Proxy_set_header X-Forwarded-Port $server_port;}","Proxy_set_header X-Real-IP $remote_addr;","Restorecon -Rv","Return 404;}","Selinux=permissive","Server {","Server_name _;","Server_name corp.jun.profi;","Touch index.html","Wget https://pro.firpo.ru/tm/tm_4/assets/img/logo.svg","В файле меняем параметры под нас","Внутри него пишем","Даем chmod и chown для папки","Дальше заходим в директорию где будут лежать наши файлики","Дальше нам надо настроить конфиг nginx","Дальше нам надо сделать логотип професионалов чтобы отображалось на сайте","Дальше пишем команду после которой у меня все заработало","Заходим в конфиг","И навсякий случай setenforce 0","И пишем свое","Нажимаем на верхнюю картинку открыть в новом окне и запоминаем его ссылку","Настроиваем lighttpd для реверс прокси","Первым делом надо скачать nginx","Переходим в папку /opt/data и пишем","Переходим на сайт http://pro.firpo.ru","Создаем файл index.html в котором напишем слова которые будут у нас на сайте","Сохраняем и выходим","Также надо отключить selinux","Теперь у нас будет картинка на сайте","Удаляем все внизу после строчек с http"]}],[{"l":"Raid","p":["-l - это level raid","-n - количество дисков","/dev/md0 - название","blkid /dev/md0 >> /etc/fstab","blkid /dev/md0 для просмотра id диска","Continue creating array? Yes","cp /etc/fstab /etc/fstab_bak резерв","lsblk (показывает все диски какие у нас имеются)","mdadm - -create /dev/md0 -l 1 -n 2 /dev/sdb /dev/sdc","mdadm - -detail /dev/md0 проверка","mkdir /opt/data","mkfs.xfs /dev/md0 создание xfs","mount -a","nano /etc/fstab","systemctl daemon-reload","UUID=asdas091432naffa /opt/data xfs defaults 0 0"]}],[{"l":"Ssh srv","p":["Adduser user","Command ssh -p 2202 user@192.168.21.2","Command ssh $@","Else","Fi}","If $@==”SRV”; then","Nano /etc/selinux/config","Nano /etc/ssh/sshd_config","Nano /etc/sudoers","Passwd user и вводим 2 раза пароль","Port 2202","Ssh -p 2202 user@192.168.21.2 у вас не будет просить пароль для входа","Ssh SRV и у нас должно будет просто войти в терминал SRV","Ssh-copy-id -p 2202 user@192.168.21.2 это переносит ключи на сервер (пишите свой айпи srv-krd)","ssh-keygen и протыкиваем везде enter","ssh() {","Sudo nano /etc/bashrc","sudo setenforce 0 но это будет действовать до перезагрузки, так что лучше в файле","user ALL=(ALL) NOPASSWD:ALL","Выключаем selinux обязательно","Дальше заодим на pc-krd в терминал","Добавляем в любое место или после root строку","Если у вас никаких ошибок вверху не написало значит все работает","Заходим в конфиг ssh","Листаем в самый низ страницы и добавляем следующий небольшой блок кода","Меняем ему пароль","Меняем значение SELINUX на permissive","Меняем порт на нужный по заданию","На сервере SRV-KRD сервис SSH должен функционировать на порте 2202","Нам надо зайти на srv-krd в файл /etc/sudoers","Настроить удаленный доступ к SRV-KRD по SSH","Переходим на pc-krd в терминал и пишем команду","Пишем","Пишем команды для того чтобы сгенерировать ключи и перенести их на сервер","Подключение к SRV-KRD с PC-KRD из под пользователя user должно осуществляться командой “ssh SRV” без дополнительных параметров.","Пользователь user на SRV-KRD должен иметь возможность выполнять команды через sudo без ввода пароля.","После этого выходим и сохраняем файл","После этого для проверки можно писать","Проверка: для начала надо перезайти в терминал, закройте его и откройте обратно","Создаем user","Сохраняем и выходим, также можно с помощью команды","Теперь при исполнение команды sudo от пользователя user у вас не будет просить пароль","Устройство PC-KRD при входе под пользователем user должно иметь доступ к SRV-KRD под пользователем user c использованием SSH ключей, без необходимости ввода пароля."]}],[{"l":"Zabbix","p":["_ date.timezone = Europe/Moscow #обязательно укажите свой часовой пояс","_ listen_addresses = '*'","}","/usr/bin/postgresql-13-setup initdb","\\l","\\q","Allow replication connections from localhost, by a user with the","CREATE DATABASE zabbix WITH OWNER zabbix;","CREATE ROLE zabbix WITH NOSUPERUSER LOGIN PASSWORD 'zabbixpassword';","DBHost=localhost","DBName=zabbix","DBPassword=zabbixpassword","DBUser=zabbix","dnf install httpd zabbix-apache-conf zabbix-sql-scripts","dnf install zabbix-server-pgsql zabbix-web-pgsql zabbix-agent","exit","GRANT ALL PRIVILEGES ON DATABASE zabbix TO zabbix;","host all all ::1/128 md5","host all all 127.0.0.1/32 md5","host replication all ::1/128 md5","host replication all 127.0.0.1/32 md5","host zabbix zabbix 127.0.0.1/32 password","IPv4 local connections:","IPv6 local connections:","Listen 80;","local all all peer","local replication all peer","Location / {","max_execution_time = 300","max_input_time = 300_","nano /etc/nginx/nginx.conf","nano /etc/php.ini","nano /etc/zabbix/zabbix_server.conf","nano /var/lib/pgsql/13/data/pg_hba.conf","nano /var/lib/pgsql/13/data/postgresql.conf","Nginx","passwd postgres","port = 5432_","post_max_size = 16M","Proxy_pass http://127.0.0.1:82","Proxy_set_header Host $host;","Proxy_set_header X-Forwarded-For $reemote_addr;","Proxy_set_header X-Forwarded-Port $server_port; }","Proxy_set_header X-Real-IP $remote_addr;","psql","replication privilege.","Server {","Server_name mon.jun.profi;","su postgres","systemctl enable httpddnf install postgresql13 postgresql13-server","systemctl enable postgresql-13","systemctl enable zabbix-agent","systemctl enable zabbix-server","systemctl restart httpd","systemctl restart postgresql-13","systemctl restart zabbix-agent","systemctl restart zabbix-server","systemctl start postgresql-13","zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | sudo -u zabbix psql zabbix","Перед конфигом надо будет поменять порт в nano /etc/httpd/httpd.conf на 82"]}]]